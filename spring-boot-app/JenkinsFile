/*pipeline {
  agent any
  stages {
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd spring-boot-app && mvn clean package'
      }
    }
  }
}*/

/*pipeline {
    agent any
    stages {
        stage('Test Docker Access') {
            steps {
                sh 'docker --version'
            }
        }
    }
}*/

/*pipeline {
  agent {
    docker {
      image 'alpine'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Test Docker Agent') {
      steps {
        sh 'echo "Hello from inside Docker!"'
      }
    }
  }
}*/

pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://10.0.2.15:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
  }
}